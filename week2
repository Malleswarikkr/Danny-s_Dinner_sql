1. W hat is the total amount each customer spent at the restaurant?
Ans:SELECT
  	customer_id,sum(price)
FROM dannys_diner.menu as menu inner join dannys_diner.sales as sales on menu.product_id=sales.product_id group by customer_id

2. How many days has each customer visited the restaurant?
Ans:SELECT
  	customer_id,count(order_date) as days
FROM dannys_diner.sales group by customer_id
3.-- 3. What was the first item from the menu purchased by each customer?
3.-- 3. What was the first item from the menu purchased by each customer?
ans:SELECT  distinct customer_id,product_name,order_date
FROM dannys_diner.menu as m  join dannys_diner.sales as s on s.product_id=m.product_id order by order_date
4.4. What is the most purchased item on the menu and how many times was it purchased by all customers?
ans:SELECT  distinct product_name,count(product_name) as count1
FROM dannys_diner.menu as m  join dannys_diner.sales as s on s.product_id=m.product_id group by product_name order by count1 desc
5.-- 5. Which item was the most popular for each customer?
ans:SELECT   customer_id,product_name,count(product_name) as count1
FROM dannys_diner.menu as m  join dannys_diner.sales as s on s.product_id=m.product_id group by customer_id,product_name order by count1 desc
6. 6. Which item was purchased first by the customer after they became a member?
ans:SELECT s.customer_id, product_name,order_date
FROM dannys_diner.menu as m  join dannys_diner.sales as s on s.product_id=m.product_id left join dannys_diner.members as mem on
mem.customer_id= s.customer_id where order_date	>join_date order by order_date
- 7. Which item was purchased just before the customer became a member?
SELECT s.customer_id, product_name,order_date
FROM dannys_diner.menu as m  join dannys_diner.sales as s on s.product_id=m.product_id left join dannys_diner.members as mem on
mem.customer_id= s.customer_id where order_date	<join_date order by order_date desc
8.-- 8. What is the total items and amount spent for each member before they became a member?
ans:SELECT s.customer_id, count(product_name),sum(m.price)
FROM dannys_diner.menu as m  join dannys_diner.sales as s on s.product_id=m.product_id left join dannys_diner.members as mem on
mem.customer_id= s.customer_id where order_date	<join_date  group by s.customer_id 
9.-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
ans:
with a as(SELECT menu.product_id,product_name,customer_id, case when product_name='sushi' then price*2
else price  end prices from dannys_diner.menu as menu inner join dannys_diner.sales as s on menu.product_id=s.product_id)
select customer_id,sum(prices)*10 from a group by customer_id order by customer_id
10.-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - 
how many points do customer A and B have at the end of January?
ans:with a as(SELECT menu.product_id,product_name,s.customer_id,
          case when product_name='sushi' then menu.price*2
          when s.order_date between mem.join_date and(mem.join_date+ INTERVAL '6' day) then menu.price*2
else price  end prices from dannys_diner.menu as menu left join dannys_diner.sales as s on menu.product_id=s.product_id  left join dannys_diner.members as mem 
on mem.customer_id=s.customer_id)
select customer_id,sum(prices)*10 from a group by customer_id order by customer_id

additinal :
join All The Things
The following questions are related creating basic data tables that Danny and his team can use to quickly derive insights without needing to join 
the underlying tables using SQL.
ans:SELECT s.customer_id,s.order_date,menu.product_name,menu.price,case  when s.order_date<mem.join_date then 'N' else 'Y' end as member1 from dannys_diner.menu as
menu left join dannys_diner.sales as s on menu.product_id=s.product_id  left join dannys_diner.members as mem on mem.customer_id=s.customer_id order by s.order_date
